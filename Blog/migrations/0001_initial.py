# Generated by Django 4.2.3 on 2023-09-06 03:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Categorie",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="CompagnieDeTransport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nom",
                    models.CharField(
                        max_length=255, verbose_name="Nom de la compagnie"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Description de la compagnie",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Horaires",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("heure_depart", models.TimeField(verbose_name="Heure de départ")),
                ("heure_arrivee", models.TimeField(verbose_name="Heure d'arrivée")),
            ],
        ),
        migrations.CreateModel(
            name="Ligne",
            fields=[
                (
                    "nom",
                    models.CharField(
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Nom de la ligne",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Ville",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nom",
                    models.CharField(max_length=255, verbose_name="Nom de la ville"),
                ),
                (
                    "code_postal",
                    models.CharField(max_length=10, verbose_name="Code postal"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Vehicule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type_vehicule",
                    models.CharField(
                        choices=[("bus", "Bus"), ("tram", "Tramway")],
                        max_length=255,
                        verbose_name="Type de véhicule",
                    ),
                ),
                ("capacite", models.IntegerField(verbose_name="Capacité en passagers")),
                (
                    "lignes",
                    models.ManyToManyField(
                        to="Blog.ligne", verbose_name="Lignes desservies"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Ticket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_reservation",
                    models.DateField(verbose_name="Date de réservation"),
                ),
                ("prix", models.FloatField(verbose_name="Prix du billet")),
                (
                    "horaire",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Blog.horaires",
                        verbose_name="Horaire réservé",
                    ),
                ),
                (
                    "ligne",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Blog.ligne",
                        verbose_name="Ligne réservée",
                    ),
                ),
                (
                    "utilisateur",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Station",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nom",
                    models.CharField(max_length=255, verbose_name="Nom de la station"),
                ),
                ("adresse", models.TextField(verbose_name="Adresse de la station")),
                ("latitude", models.FloatField(verbose_name="Latitude géographique")),
                ("longitude", models.FloatField(verbose_name="Longitude géographique")),
                (
                    "ville",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Blog.ville",
                        verbose_name="Ville associée",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Poste",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("titre", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("date_publiee", models.DateTimeField(auto_now_add=True)),
                ("date_mise_a_jour", models.DateTimeField(auto_now=True)),
                ("url_thumbnail", models.URLField(blank=True, null=True)),
                ("duree", models.DurationField(blank=True, null=True)),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("publique", "Publique"),
                            ("privee", "Privée"),
                            ("archivee", "Archivée"),
                        ],
                        default="publique",
                        max_length=10,
                    ),
                ),
                ("note_moyenne", models.FloatField(default=0)),
                ("nombre_votes", models.PositiveIntegerField(default=0)),
                (
                    "url_video",
                    models.URLField(blank=True, null=True, verbose_name="Lien vidéo"),
                ),
                (
                    "video_upload",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="videos/",
                        verbose_name="Upload vidéo",
                    ),
                ),
                (
                    "auteur",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "categorie",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="Blog.categorie",
                    ),
                ),
                (
                    "ligne",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Blog.ligne",
                        verbose_name="Ligne associée",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="ligne",
            name="arrivee",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="lignes_d_arrivee",
                to="Blog.station",
                verbose_name="Station d'arrivée",
            ),
        ),
        migrations.AddField(
            model_name="ligne",
            name="compagnie",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="Blog.compagniedetransport",
                verbose_name="Compagnie associée",
            ),
        ),
        migrations.AddField(
            model_name="ligne",
            name="depart",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="lignes_de_depart",
                to="Blog.station",
                verbose_name="Station de départ",
            ),
        ),
        migrations.AddField(
            model_name="horaires",
            name="ligne",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="Blog.ligne",
                verbose_name="Ligne associée",
            ),
        ),
        migrations.CreateModel(
            name="Commentaire",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("texte", models.TextField()),
                ("date_publiee", models.DateTimeField(auto_now_add=True)),
                (
                    "poste",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="commentaires",
                        to="Blog.poste",
                    ),
                ),
                (
                    "utilisateur",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
